
PIXEL_MAIN_BEGIN

const float angleDelta = 0.01f;

vec3 normal = normalize(inWorldPos.xyz);
vec3 up = vec3(0.0, 1.0, 0.0);
vec3 right = normalize(cross(up, normal));
up = normalize(cross(normal, right));

vec3 irradiance = vec3(0,0,0);
float weightSum = 0;

for (float phi = 0.f; phi < _2PI; phi += angleDelta)
{
    for (float theta = 0.f; theta < _PI2; theta += angleDelta) 
    {
        float sinTheta = sin(theta);
        float cosTheta = cos(theta);

        float weight = cosTheta * sinTheta;

        // spherical to cartesian(in tangent space)
        vec3 tangentSample = vec3(sinTheta * cos(phi), sinTheta * sin(phi), cosTheta);
        // tangent space to world
        vec3 sampleVec = tangentSample.x * right + tangentSample.y * up + tangentSample.z * normal;

        irradiance += sampleTex(Skybox, sampleVec).rgb * weight;

        weightSum += weight;
    }
}  
irradiance /= weightSum;
outColor = vec4(irradiance, 1.0f);

PIXEL_MAIN_END 
