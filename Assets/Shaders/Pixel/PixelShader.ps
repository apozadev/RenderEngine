
CBuffer(MatBuffer, 2)
{
  float fMult;
  vec4 vTint;
};

PIXEL_MAIN_BEGIN

  vec3 ambientFactor = vec3(0.3, 0.3, 0.3);  

  vec3 vN = normalize(inNormal);
  vec3 vT = normalize(inTangent - dot(inTangent, vN) * vN);
  vec3 vB = normalize(cross(inNormal, inTangent));
  mat3 mTBN = buildmat3(vT, vB, vN);

  vec3 vWN = sampleTex(Texture1, vec2(inUv.x, inUv.y)).rgb * 2.0 - 1.0;

  vWN = normalize(mul(mTBN, vWN)); 

  vec3 light = LambertDirLighting(vec4(inWorldPos, 1), vWN);

  vec4 color = sampleTex(Texture0, vec2(inUv.x, inUv.y));  
  
  outColor = color * vec4(light + ambientFactor, 1);
  outColor.a = 0.7f; 

  outColor *= vTint * fMult;
 
PIXEL_MAIN_END
 