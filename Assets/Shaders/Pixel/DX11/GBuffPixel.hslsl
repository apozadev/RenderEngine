#pragma pack_matrix( column_major )

struct VSout
{
	float4 pos : SV_Position;
	float2 uv : TEXCOORD;
	float3 normal : NORMAL;
};

SamplerState texSampler : register(s0);

#define vec2 float2
#define vec3 float3
#define vec4 float4

#define mat4 matrix

#define mul(mat, v) mul(mat, v)

#define sampleTex(tex, uv) tex.Sample(texSampler, uv)

#define Texture(name, set, bind) Texture2D name : register(t##bind);
#define PIXEL_MAIN_BEGIN \
  struct PS_OUTPUT  \
  { \
    float4 color: SV_Target0; \
  }; \
  PS_OUTPUT main(VSout i) { \
    PS_OUTPUT o;

#define PIXEL_MAIN_END  \
  return o; \
  } 

#define inPos     i.pos
#define inUv      i.uv
#define inNormal  i.normal

#define outColor  o.color
Texture(gbuffTex,1,16)

Texture(albedoTex,3,48)

PIXEL_MAIN_BEGIN

  vec3 lightDir = vec3(0, 0, 1);

  float ambientFactor = 0.3;
  float light = max(0, dot(lightDir, normalize(inNormal)));

  vec4 color = vec4(1.0, 0.0, 0.0, 1.0);

  outColor = color * (max(0, dot(lightDir, normalize(inNormal))) + ambientFactor); 
  outColor.a = 0.7f;

PIXEL_MAIN_END

