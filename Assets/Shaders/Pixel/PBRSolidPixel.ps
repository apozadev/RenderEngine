CBuffer(MatBuffer, 2)
{
  vec4 vAlbedo;
  float fMetalness;
  float fRoughness;
  float fReflectivity;
};

PIXEL_MAIN_BEGIN

  vec3 vCamPos = CameraPos;
  PBRinput pbrIn;
  pbrIn.normal = vec4(normalize(inNormal), 0);
  pbrIn.viewDir = vec4(normalize(vCamPos - inWorldPos), 0);  
  pbrIn.albedo = vAlbedo;
  pbrIn.metalness = fMetalness;
  pbrIn.roughness = fRoughness;  
  pbrIn.reflectivity = fReflectivity;

  vec3 color = vec3(0,0,0);

  for (uint i = 0; i < DirLightCount; i++)
  {
    vec4 vLightViewProjPos = mul(DirLightViewProj(i), vec4(inWorldPos, 1));

    pbrIn.lightDir = DirLightDir(i);
    pbrIn.halfVector = vec4(normalize(pbrIn.viewDir.xyz + pbrIn.lightDir.xyz), 0);
    pbrIn.lightColor = DirLightColor(i) * ShadowFactor(vLightViewProjPos, i);

    color += PBR(pbrIn); 

  }
    
  outColor = vec4(color, 1); 
 
PIXEL_MAIN_END
 